# -*- coding: utf-8 -*-
"""Crash.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DEsynLOnC3wcpVEecuKOPC2qqMokyCzp
"""

import matplotlib.pyplot as plt
import numpy as np
import hashlib
import random
import string
import hmac

e = 2**52
salt = "00000000000000000006b3a5a60849712b5f42f5fe3d2b475adea1d7bee9e36f" #client seed

def get_result(game_hash):
    hm = hmac.new(str.encode(game_hash), b'', hashlib.sha256)
    hm.update(salt.encode("utf-8"))
    h = hm.hexdigest()
    if (int(h, 16) % 25 == 0):
        return 1.00
    h = int(h[:13], 16)
    return (((100 * e - h) / (e-h)) // 1) / 100.0

def get_prev_game(hash_code):
    m = hashlib.sha256()
    m.update(hash_code.encode("utf-8"))
    return m.hexdigest()

game_hash = "ed40a341d2dcfcec509293fcbd8a7a7a888b1c2b9f94fcf703fdbcc6b812057b"
first_game = "dd11d85f91f5ee022dc34bd4a65b4e8e95beaf4dc497389c82501372a7a798da"

multipliers = []
while game_hash != first_game:
    x = get_result(game_hash)
    multipliers.append(x)
    game_hash = get_prev_game(game_hash)

multipliers = sorted(multipliers)

L = len(multipliers)
print(L)

import matplotlib.pyplot as plt


import seaborn as sns
sns.set(rc={'figure.figsize':(11.7,8.27)})
plt.hist(multipliers, range=(1, 10), bins=[1, 2, 3, 4, 5, 6, 7, 8, 9])
plt.title("Freqüència pràctica de cada multiplicador", fontsize=20)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)
plt.ylabel("Nº de partides", fontsize=15)
plt.xlabel("Multiplicador", fontsize=15)

import matplotlib.pyplot as plt
import numpy as np


def g(x):
  return (1/25 + (24/25)*(1 - 1/x))
theo = []

for i in range(2, 11):
  theo.append(L*(g(i)-g(i-1)))

ran = ["1", "2", "3", "4", "5", "6", "7", "8", "9"]

plt.bar(ran, theo, width=1)
plt.title("Freqüència teòrica de cada multiplicador", fontsize=20)
plt.xticks(fontsize=15)
plt.yticks(fontsize=15)
plt.ylabel("Nº de partides", fontsize=15)
plt.xlabel("Multiplicador", fontsize=15)